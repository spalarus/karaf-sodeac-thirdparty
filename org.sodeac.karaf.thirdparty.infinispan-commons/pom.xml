<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.sodeac</groupId>
  <artifactId>org.sodeac.karaf.thirdparty.infinispan-commons</artifactId>
  <version>9.4.19.Final_1</version>
  <packaging>bundle</packaging>
	
  <name>Infinispan Commons</name>
  <description>Infinispan Commons - Rebundled for OSGi (fix missing exports)</description>
  <url>http://www.infinispan.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <bundle.version>9.4.19.Final</bundle.version>
  </properties>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>JBoss, a division of Red Hat</name>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/infinispan/infinispan.git</connection>
    <developerConnection>scm:git:https://github.com/infinispan/infinispan.git</developerConnection>
    <url>https://github.com/infinispan/infinispan.git</url>
  </scm>
  
  <dependencies>
    <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-commons</artifactId>
      <version>${bundle.version}</version>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>org.infinispan:infinispan-commons:jar:</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <version>4.2.1</version>
        <configuration>
          <instructions>
          	<Bundle-SymbolicName>org.infinispan.commons</Bundle-SymbolicName>
            <Bundle-Version>${bundle.version}</Bundle-Version>
            <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Export-Package>
				org.infinispan.commons;version="${bundle.version}",
				org.infinispan.commons.api;version="${bundle.version}";uses:="javax.transaction,org.infinispan.commons.configuration",
				org.infinispan.commons.configuration;version="${bundle.version}";uses:="org.infinispan.commons,org.infinispan.commons.configuration.attributes,org.infinispan.commons.util",
				org.infinispan.commons.configuration.attributes;version="${bundle.version}";uses:="javax.xml.stream,org.infinispan.commons.util",
				org.infinispan.commons.dataconversion;version="${bundle.version}";uses:="org.infinispan.commons,org.infinispan.commons.configuration,org.infinispan.commons.logging,org.infinispan.commons.marshall,org.infinispan.commons.marshall.jboss",
				org.infinispan.commons.equivalence;version="${bundle.version}";uses:="org.infinispan.commons.util",
				org.infinispan.commons.executors;version="${bundle.version}",
				org.infinispan.commons.hash;version="${bundle.version}";uses:="net.jcip.annotations,org.infinispan.commons.marshall.exts",
				org.infinispan.commons.io;version="${bundle.version}";uses:="net.jcip.annotations,org.infinispan.commons.marshall,org.jboss.marshalling",
				org.infinispan.commons.jdkspecific;version="${bundle.version}",
				org.infinispan.commons.jmx;version="${bundle.version}";uses:="javax.management",
				org.infinispan.commons.logging;version="${bundle.version}";uses:="javax.management,org.infinispan.commons,org.infinispan.commons.dataconversion,org.infinispan.counter.exception,org.jboss.logging",
				org.infinispan.commons.marshall;version="${bundle.version}";uses:="net.jcip.annotations,org.infinispan.commons,org.infinispan.commons.api,org.infinispan.commons.configuration,org.infinispan.commons.dataconversion,org.infinispan.commons.io",
				org.infinispan.commons.marshall.exts;version="${bundle.version}";uses:="org.infinispan.commons.equivalence,org.infinispan.commons.marshall",
				org.infinispan.commons.marshall.jboss;version="${bundle.version}";uses:="org.infinispan.commons.configuration,org.infinispan.commons.dataconversion,org.infinispan.commons.io,org.infinispan.commons.logging,org.infinispan.commons.marshall,org.jboss.marshalling,org.jboss.marshalling.reflect,org.jboss.marshalling.river",
				org.infinispan.commons.persistence;version="${bundle.version}",
				org.infinispan.commons.stat;version="${bundle.version}",
				org.infinispan.commons.time;version="${bundle.version}";uses:="com.github.benmanes.caffeine.cache",
				org.infinispan.commons.tx;version="${bundle.version}";uses:="javax.transaction,javax.transaction.xa,org.infinispan.commons.marshall",
				org.infinispan.commons.tx.lookup;version="${bundle.version}";uses:="javax.transaction",
				org.infinispan.commons.util;version="${bundle.version}";uses:="javax.naming,javax.net.ssl,javax.security.auth,javax.security.sasl,net.jcip.annotations,org.infinispan.commons,org.infinispan.commons.equivalence,org.infinispan.commons.hash,org.infinispan.commons.marshall",
				org.infinispan.commons.util.concurrent;version="${bundle.version}",org.infinispan.commons.util.uberjar;version="${bundle.version}",
				org.infinispan.counter.api;version="${bundle.version}";uses:="org.infinispan.commons.marshall",
				org.infinispan.counter.exception;version="${bundle.version}",
				org.infinispan.counter.impl;version="${bundle.version}";uses:="org.infinispan.counter.api",
				org.infinispan.counter.util;version="${bundle.version}";uses:="org.infinispan.counter.api",
				org.infinispan.multimap.api;version="${bundle.version}";uses:="org.infinispan.commons.util",
				org.infinispan.lock.api;version="${bundle.version}";uses:="org.infinispan.commons.util",
				org.infinispan.lock.exception;version="${bundle.version}"
            </Export-Package>
			<Import-Package>
				com.github.benmanes.caffeine.cache,
				javax.management,
				javax.naming,
				javax.net.ssl,
				javax.security.auth,
				javax.security.sasl,
				javax.transaction;version="[1.2,2)",
				javax.transaction.xa,
				javax.xml.stream,
				net.jcip.annotations;resolution:=optional,
				org.infinispan.commons;version="[9.4,10)",
				org.infinispan.commons.api;version="[9.4,10)",
				org.infinispan.commons.configuration;version="[9.4,10)",
				org.infinispan.commons.configuration.attributes;version="[9.4,10)",
				org.infinispan.commons.dataconversion;version="[9.4,10)",
				org.infinispan.commons.equivalence;version="[9.4,10)",
				org.infinispan.commons.hash;version="[9.4,10)",
				org.infinispan.commons.io;version="[9.4,10)",
				org.infinispan.commons.jdkspecific;version="[9.4,10)",
				org.infinispan.commons.logging;version="[9.4,10)",
				org.infinispan.commons.marshall;version="[9.4,10)",
				org.infinispan.commons.marshall.exts;version="[9.4,10)",
				org.infinispan.commons.marshall.jboss;version="[9.4,10)",
				org.infinispan.commons.util;version="[9.4,10)",
				org.infinispan.commons.util.concurrent;version="[9.4,10)",
				org.infinispan.counter.api;version="[9.4,10)",
				org.infinispan.counter.exception;version="[9.4,10)",
				org.infinispan.counter.util;version="[9.4,10)",
				org.jboss.logging;version="[3.3,4)",
				org.jboss.marshalling;resolution:=optional,
				org.jboss.marshalling.reflect;resolution:=optional,
				org.jboss.marshalling.river;resolution:=optional,
				org.jboss.marshalling.util;resolution:=optional,
				org.osgi.framework;version="[1.6,2)",
				org.osgi.util.tracker;version="[1.5,2)"
			</Import-Package>
            <!-- Export-Package>
            	org.infinispan.commons.api.embedded;uses:="org.infinispan.commons.util,org.infinispan.configuration.cache,org.infinispan.container.entries,org.infinispan.manager,org.infinispan.commons.api,org.infinispan.util.function";version=${bundle.version},
            	org.infinispan.commons.impl;uses:="org.infinispan,org.infinispan.configuration.cache,org.infinispan.configuration.global,org.infinispan.container.entries,org.infinispan.factories,org.infinispan.factories.components,org.infinispan.lifecycle,org.infinispan.manager,org.infinispan.commons.api.embedded";version=${bundle.version},
            	org.infinispan.commons.impl.function;uses:="org.infinispan.commons.marshall,org.infinispan.functional,org.infinispan.util.function";version=${bundle.version}
            </Export-Package-->
          </instructions>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
	<profile>
		<id>release-sign-deploy-artifacts</id>
		<activation>
			<property>
				<name>performRelease</name>
				<value>true</value>
			</property>
		</activation>
		<distributionManagement>
			<snapshotRepository>
				<id>ossrh</id>
				<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			</snapshotRepository>
			<repository>
				<id>ossrh</id>
				<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
			</repository>
		</distributionManagement>
		<build>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
							<configuration>
								<keyname>${gpg.keyname}</keyname>
								<passphraseServerId>${gpg.keyname}</passphraseServerId>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</build>
	</profile>
  </profiles>
  
</project>
